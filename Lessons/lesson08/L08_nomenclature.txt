Nomenklatur för lektion 7:

Det är väldigt många nya termer den här lektionen, återvänd gärna till denna fil
	och använd den som en ordlista.


GUI (Graphical User Interface / Grafiskt Användargränssnitt):
	Ett visuellt sätt för användare att interagera med program. Används istället
		för textkommandon.

CLI (Command Line Interface / Kommandoradsgränssnitt):
	Motsattsen till att ha ett GUI.
	De program som ni skrivit tidigare har haft denna typ av gränssnitt.

tkinter:
	En del av Pythons standardbibliotek (de saker som kommer färdiginstallerade
		med Python). Används för att skapa GUI.
	Namnet kommer ifrån att det är ett sätt att interagera med ett
		verktygspaket som heter Tk. "Tk interface" helt enkelt.

Widget:
	Ett GUI-element.
		Exempel inkluderar knappar, textfält och ramar.
	I tkinter så tillhör alltid en Widget en annan Widget. Detta skapar en
		hierarki, som kan tänkas på som ett träd, där det finns Widgets i
		Widgets i Widgets och så vidare.
		Det enda undantaget är den Widget som man kallar för "root".

Window / Toplevel / Fönster:
	Varje program som använder tkinter består av minst ett fönster. Fönstret
		innehåller alla andra grafiska element.
	Fönster är också Widgets.

Event / Händelse:
	En reaktion från programmet på att användaren har gjort något eller
		att programmet registrerar en förändring.
	Ofta är dessa reaktioner på att användaren har klickat på något eller
		tryckt på en tangent.

Event Handler / Händelsehanterare:
	En funktion som körs när ett särskilt Event sker.

Layout Manager / Geometry Manager / Layouthanterare:
	Ett system för att organisera och placera Widgets i en Widget som går att
		använda som behållare. Exempelvis ett fönster eller en Frame.
	I tkinter finns pack, grid och place.

mainloop:
	Den metod som startar ett tkinter-baserat program och väntar på interaktion
		från användaren.
	Finns i det objekt som borde namngivits som root.
	Utan denna så händer ingenting i tkinter om man startar programmet utanför
		IDLE.

root / tk.Tk():
	Huvudfönstret för en tkinter-applikation.
		root är ett namn som är standard att använda, precis som man använder
			argumentet "self" i metoder.
	Stänger man root så stänger man alla Widgets som finns där i och avslutar
		därmed automatiskt programmet.

master:
	Den Widget som en annan Widget tillhör. Det går att referera till en
		Widgets master genom att använda syntaxen:
			orginal_widgeten.master

	En Widget kan bara ha en master.
	En Widget kan vara master för flera Widgets.
	Det är så man får den trädliknande hierarkin som nämndes tidigare.

config:
	Förkortning av configure (båda går att använda). Betyder konfigurera och
		är en metod som finns på alla Widget.
	Använder man den från en Widget så kan man ändra på egenskaper såsom text
		och färg. Alla egenskaper utöver "name" går att ändra på. "name" kan
		enbart sättas när en Widget skapas.